<div class="nav-bar">
	<?php echo Phalcon_Tag::linkTo('index', 'Home') ?> » Documentation
</div>

<div class="doc-paragraph">
	<h2>Internationalization</h2>
	As well you should know Phalcon is a framework written as a C extension for PHP. Currently,
	PHP has a magnificent extension to create internationalized applications. You can find it in the
	<a href="http://pecl.php.net/package/intl">PECL</a> repository and its well documented at the official
	<a href="http://www.php.net/manual/en/intro.intl.php">PHP manual</a>.
</div>

<div class="doc-paragraph">
	So basically for us is not worth it, to re-implement another internationalization extension for PHP.
	In this part of the documentation, we'll show you how to implement the functionality of this extension
	into Phalcon applications.
</div>

<div class="doc-paragraph highlightb">
	This guide is not intended to be a complete documentation of the intl extension.
	Please visit its <a href="http://www.php.net/manual/en/book.intl.php">documentation</a> for a complete reference.
</div>

<div class="doc-paragraph">
	<h3><a name="find">Find out best available Locale</a></h3>
	There are several ways to find out the best available locale using intl. One of them is to check the
	HTTP "Accept-Language" header:
</div>

<?php echo hyperlight('$locale = Locale::acceptFromHttp($_SERVER["HTTP_ACCEPT_LANGUAGE"]);
//Locale could be something like "en_GB" or "en"
echo $locale;
', 'iphp') ?>

<div class="doc-paragraph">
	Below method returns a locale identified. It is used to get language, culture, or regionally-specific behavior from the Locale API.
</div>

<div class="doc-paragraph">
Examples of identifiers include:
<ul>
	<li>en-US (English, United States)</li>
    <li>zh-Hant-TW (Chinese, Traditional Script, Taiwan)</li>
    <li>fr-CA, fr-FR (French for Canada and France respectively)</li>
</ul>
</div>

<div class="doc-paragraph">
	<h3><a name="format">Formatting messages based on Locale</a></h3>
	Part of creating a localized application is to produce concatenated, language-neutral messages.
	The <a href="http://www.php.net/manual/en/class.messageformatter.php">MessageFormatter</a>
	enables to produce those outputs.
</div>

<div class="doc-paragraph">
	Printing numbers formatted based on some locale:
</div>

<?php echo hyperlight('
//Prints € 4 560
$formatter = new MessageFormatter("fr_FR", "€ {0,number,integer}");
echo $formatter->format(array(4560));

//Prints USD$ 4,560.5
$formatter = new MessageFormatter("en_US", "USD$ {0,number}");
echo $formatter->format(array(4560.50));

//Prints ARS$ 1.250,25
$formatter = new MessageFormatter("es_AR", "ARS$ {0,number}");
echo $formatter->format(array(1250.25));

', 'iphp') ?>

<div class="doc-paragraph">
	Message formatting using time and date patterns:
</div>

<?php echo hyperlight('

//Setting parameters
$time = time();
$values = array(7, $time, $time);

//Prints "At 3:50:31 PM on Apr 19, 2012, there was a disturbance on planet 7."
$pattern = "At {1,time} on {1,date}, there was a disturbance on planet {0,number}.";
$formatter = new MessageFormatter("en_US", $pattern);
echo $formatter->format($values);

//Prints "À 15:53:01 le 19 avr. 2012, il y avait une perturbation sur la planète 7."
$pattern = "À {1,time} le {1,date}, il y avait une perturbation sur la planète {0,number}.";
$formatter = new MessageFormatter("fr_FR", $pattern);
echo $formatter->format($values);

', 'iphp') ?>

<div class="doc-paragraph">
	<h3><a name="collator">Locale-Sensitive comparison</a></h3>
	The <a href="http://www.php.net/manual/en/class.collator.php">Collator</a> class
	provides string comparison capability with support for appropriate locale-sensitive sort orderings.
	Check the examples below to figure out how this class works:
</div>

<?php echo hyperlight('

//Create a collator using Spanish locale
$collator = new Collator("es");

//Returns that the strings are equal, in spite of the emphasis on the "o"
$collator->setStrength(Collator::PRIMARY);
$collator->compare("una canción", "una cancion");

//Returns that the strings are not equal
$collator->setStrength(Collator::DEFAULT);
$collator->compare("una canción", "una cancion");

', 'iphp') ?>

<div class="nav-bar">
	<table width="90%" align="center">
		<tr>
			<td align="left">
				<?php echo Phalcon_Tag::linkTo('documentation/acl', '← Access Control Lists (ACL)') ?>
			</td>
			<td align="right">
				<?php echo Phalcon_Tag::linkTo('documentation/db', 'Database Abstraction Layer →') ?>
			</td>
		</tr>
	</table>
</div>
