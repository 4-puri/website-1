{
  "about": "About",
  "acl": "ACL",
  "acl_1": "This is how you can built the access control list (ACL):",
  "acl_2": "Create the ACL",
  "acl_3": "The default action is DENY access",
  "acl_4": "Register two roles, Users is registered users",
  "acl_5": "and guests are users without a defined identity",
  "acl_description": "Access Control List allows users to access the modules they're authorized to",
  "api": "API",
  "auto_loader": "Autoloader",
  "auto_loader_1": "Register namespaces, prefixes, directories or classes. Take advantage of the autoloader events and maintain full control over what files are loaded and from where.",
  "auto_loader_2": "Creates the autoloader",
  "auto_loader_3": "Register some namespaces",
  "auto_loader_4": "Register autoloader",
  "autoloader": "Autoloader",
  "autoloader_description": "Provides the autoloading mechanism of PHP classes following PSR-4.",
  "basic_features": "Basic Features",
  "blog": "Blog",
  "cache": "Cache",
  "cache_1": "The cache component allows faster access to frequently used or already processed data. It supports many backends such as Redis, Memcached, Mongo, Files, Apc and more",
  "cache_2": "Set the models cache service",
  "cache_3": "Cache data for one day by default",
  "cache_4": "Memcached connection settings",
  "cache_description": "Improve your performance with many of the backend caches that Phalcon provides",
  "contribute": "Contribute",
  "contributors": "Phalcon contributors",
  "contributors_description": "Phalcon is improved everyday by our amazing community",
  "crypt": "Crypt",
  "crypt_description": "Encrypt\/Decrypt important data to keep them safe from unauthorized third-parties",
  "data_and_storage": "Data & storage",
  "dependency_injection": "Dependency Injection",
  "dependency_injection_1": "Phalcon is built upon a powerful yet easy to understand and use pattern called Dependency Injection. Initialize or define services once - and use them virtually anywhere throughout the application.",
  "dependency_injection_2": "Create the Dependency Injector Container",
  "dependency_injection_3": "Register classes, functions, components",
  "dependency_injection_4": "Use anywhere else in code",
  "dependency_injection_description": "Dependency Injection and Location of services and it\u2019s itself a container for them.",
  "documentation": "Documentation",
  "donate": "Donate",
  "download": "Download",
  "download_version": "Download v:1:",
  "encryption": "Encryption",
  "encryption_1": "Phalcon provides encryption facilities via the Phalcon\\Crypt component. This class offers simple object-oriented wrappers to the openssl PHP's encryption library.",
  "encryption_2": "This is a secret key (32 bytes).",
  "encryption_3": "This is the text that you want to encrypt.",
  "events": "Events",
  "events_description": "Extend the most of the framework components by setting \"hook points\". Create your own events and make your application more flexible and powerful",
  "events_management": "Events Management",
  "events_management_1": "An EventsManager allows us to attach listeners to a particular type of event. The type that interests us now is \"dispatch\". The following code filters all events produced by the Dispatcher:",
  "events_management_2": "Create an events manager",
  "events_management_3": "Listen for events produced in the dispatcher using the Security plugin",
  "events_management_4": "Handle exceptions and not-found exceptions using NotFoundPlugin",
  "events_management_5": "Assign the events manager to the dispatcher",
  "flash_messages": "Flash messages",
  "flash_messages_1": "Use the flash notifier to show notifications to a user in a web application:",
  "flash_messages_2": "there were errors in this form",
  "flash_messages_3": "yes!, everything went very smoothly",
  "flash_messages_4": "this is a notice for users",
  "flash_messages_5": "this is just a warning",
  "flash_messages_description": "Flash messages are used to notify the user about the state of actions.",
  "forms_builder": "Forms Builder",
  "forms_builder_1": "Each element in the form can be rendered as required by the developer. Internally, Phalcon\\Tag is used to produce the correct HTML for each element and you can pass additional HTML attributes as the second parameter of render():",
  "forms_builder_2": "Home",
  "forms_builder_3": "Cellphone",
  "forms_builder_description": "Easily create HTML forms",
  "forum": "Forum",
  "get_phalcon": "Get Phalcon :1:",
  "github": "GitHub",
  "header_slogan": "Its innovative architecture makes Phalcon the fastest PHP framework ever built!",
  "header_tagline": "A full-stack PHP framework delivered as a C-extension",
  "i18n": "i18n",
  "i18n_1": "The component Phalcon\\Translate aids in creating multilingual applications. Applications using this component, display content in different languages, based on the user\u2019s chosen language supported by the application.",
  "i18n_2": "Ask browser what is the best language",
  "i18n_3": "Check if we have a translation file for that lang",
  "i18n_4": "Fallback to some default",
  "i18n_5": "Return a translation object",
  "i18n_description": "Translate your applications to many languages easily",
  "install_instructions": "Install instructions",
  "join_our_community": "Come join our vibrant developer community!",
  "join_our_community_description": "Community contributed with Extensions, Plugins, Adapters, VM, examples, source code... and more",
  "language_text": "English",
  "learn": "Learn",
  "low_overhead": "Low overhead",
  "low_overhead_1": "Zephir\/C extensions are loaded together with PHP one time on the web server's daemon start process",
  "low_overhead_2": "Classes and functions provided by the extension are ready to use for any application",
  "low_overhead_3": "The code is compiled and isn\u2019t interpreted because it's already compiled to a specific platform and processor",
  "low_overhead_4": "Thanks to its low-level architecture and optimizations <strong>Phalcon provides the lowest overhead for MVC-based applications<\/strong>",
  "low_overhead_description": "Low memory consumption and CPU compared to traditional frameworks",
  "low_overhead_title": "PHP C-extension (Phalcon)",
  "more": "MORE...",
  "mvc": "MVC",
  "mvc_1": "Build single and multi-module applications with ease and pleasure. Using the file structure, scheme and patterns you already know.",
  "mvc_hmvc": "MVC & HMVC",
  "mvc_hmvc_description": "Modules, components, models, views and controllers",
  "odm_for_mongo": "ODM for MongoDB",
  "odm_for_mongo_description": "Object Document Mapping for MongoDB",
  "odm_for_mongo_1": "In addition to its ability to map tables in relational databases, Phalcon can map documents to a MongoDB database. The ODM offers a CRUD functionality, events, validations among other services.",
  "odm_for_mongo_2": "How many robots are there?",
  "odm_for_mongo_3": "How many mechanical robots are there?",
  "odm_for_mongo_4": "There are :1: robots",
  "oops": "Houston we have a problem!",
  "orm": "ORM",
  "orm_description": "Object Relational Mapping",
  "orm_1": "A powerful ORM is provided by Phalcon allowing you to manipulate database records as classes and objects. MySQL, PostgreSQL and SQLite are supported out of the box.",
  "phql": "PHQL",
  "phql_description": "The powerful and secure Phalcon Query Language, PHQL",
  "phql_1": "PHQL is a high-level, object-oriented SQL dialect that allows to write queries using a standardized SQL-like language. PHQL is implemented as a parser (written in C) that translates syntax in that of the target RDBMS. To achieve the highest performance possible, Phalcon provides a parser that uses the same technology as SQLite. This technology provides a small in-memory parser with a very low memory footprint that is also thread-safe.",
  "phql_2": "Name",
  "polling_app": "A polling app built from scratch in < 15 min",
  "queueing": "Queueing - background process",
  "queueing_description": "Use the built-in queueing system in Phalcon to schedule jobs and reduce the load of your web server",
  "queueing_1": "Activities like processing videos, resizing images or sending emails aren't suitable to be executed online or in real time because it may slow the loading time of pages and severely impact the user experience. The best solution here is to implement background jobs. The web application puts jobs into a queue and which will be processed separately.",
  "queueing_2": "Connect to the queue",
  "queueing_3": "Insert the job in the queue",
  "resources": "Resources",
  "rest": "Rest",
  "rest_description": "In this case, you can use either a micro or full stack application to meet your goal. In addition, a powerful set of HTTP helpers.",
  "restful_services": "Restful Services",
  "restful_services_1": "Writing REST servers and applications has never been easier. No boilerplate. Simple services will fit in one file.",
  "restful_services_2": "Returning data in JSON",
  "router": "Router",
  "router_1": "Routing as it supposed to be. Nothing more. Nothing less.",
  "router_2": "Create the router",
  "router_3": "Define a route",
  "router_description": "Phalcon\\Mvc\\Router provides advanced routing capabilities.",
  "see_for_yourself": "See for yourself...",
  "sharding": "Sharding",
  "sharding_description": "Connect, store and retrieve data from many database systems at the same time",
  "sharding_1": "Attach models to different databases",
  "sharding_2": "This service returns a MySQL database",
  "sharding_3": "This service returns a PostgreSQL database",
  "slack": "Slack",
  "something_went_wrong": "Something went wrong :(",
  "sponsored_by": "Sponsored by",
  "stack_overflow": "Stack Overflow",
  "store": "Store",
  "support": "Support",
  "template_engine_volt": "Template Engine (Volt)",
  "template_engine_volt_description": "A template engine inspired by Jinja but built in C for PHP",
  "template_engine_volt_1": "Volt is an ultra-fast and designer friendly templating language written in Zephir/C for PHP. It provides you a set of helpers to write views in an easy way. Volt is highly integrated with other components of Phalcon, just as you can use it as a stand-alone component in your applications.",
  "template_engines": "Template Engines",
  "template_engines_description": "Views represent the user interface of your application",
  "template_engines_1": "Views represent the user interface of your application. Views are often HTML files with embedded PHP code that perform tasks related solely to the presentation of the data. Views handle the job of providing data to the web browser or other tool that is used to make requests from your application.",
  "transactions": "Transactions",
  "transactions_description": "Transactions in Phalcon allows to keep the data integrity safe.",
  "transactions_1": "When a process performs multiple database operations, it might be important that each step is completed successfully so that data integrity can be maintained. Transactions offer the ability to ensure that all database operations have been executed successfully before the data is committed to the database.",
  "transactions_2": "Create a transaction manager",
  "transactions_3": "Request a transaction",
  "transactions_4": "Get the robots to be deleted",
  "transactions_5": "Something's gone wrong, we should rollback the transaction",
  "transactions_6": "Everything's gone fine, let's commit the transaction",
  "transactions_7": "Robots were deleted successfully!",
  "transactions_8": "Failed, reason: ",
  "try_phalcon": "Try phalcon",
  "views_and_frontend": "Views & frontend",
  "watch_demo": "Watch the demo video",
  "zephir": "Zephir"
}