#!/usr/bin/env php
<?php
/*
  +------------------------------------------------------------------------+
  | Phalcon Website                                                        |
  +------------------------------------------------------------------------+
  | Copyright (c) 2012-2015 Phalcon Team (http://www.phalconphp.com)       |
  +------------------------------------------------------------------------+
  | This source file is subject to the New BSD License that is bundled     |
  | with this package in the file docs/LICENSE.txt.                        |
  |                                                                        |
  | If you did not receive a copy of the license and are unable to         |
  | obtain it through the world-wide-web, please send an email             |
  | to license@phalconphp.com so we can send you a copy immediately.       |
  +------------------------------------------------------------------------+
  | Authors: Phalcon Team (http://www.phalconphp.com)                      |
  +------------------------------------------------------------------------+
*/

error_reporting(E_ALL);

$projectUrl = 'https://www.transifex.com/projects/p/phalcon';
$backupDir  = dirname(__FILE__) . '/app/var/languages_backup/';
$sourceDir  = dirname(__FILE__) . '/app/var/languages/';

if (!file_exists($backupDir)) {
    mkdir($backupDir, 0777, true);
    (new \SplFileObject($backupDir . '.gitignore', 'w'))->fwrite('[^.]*');
}

include_once($sourceDir . 'en.php');
$sourceMessages = $messages;
unset($messages);
$sourceKeys = array_keys($sourceMessages);
arsort($sourceKeys);

$template = <<<EOD
<?php
/**
 * Language: %s
 * Updated at: %s
 *
 * WARNING
 *
 * Be careful when changing this file!
 * Manual changes in this file may cause a loss of the translations.
 * Instead of manually changing we recommend you to use %s
 *
 * If you nevertheless want to add new strings for translation,
 * don't add new pairs (key => translation) manually.
 * Instead of this add new pairs to %s and run: %s
 */

// Need to keep this as array() vs. [] for Transilex.
\$messages = %s;
EOD;


foreach ((new \DirectoryIterator($sourceDir)) as $fileInfo) {
    if ($fileInfo->isDot() || 'php' !== strtolower($fileInfo->getExtension()) || 'en' === $fileInfo->getBasename('.php')) {
        continue;
    }

    $backupFile   = $backupDir . $fileInfo->getBasename();
    $originalFile = $fileInfo->getRealPath();

    include_once $originalFile;

    if (!isset($messages)) {
        continue;
    }

    $trKeys = array_keys($messages);
    arsort($trKeys);

    $diff = array_diff($sourceKeys, $trKeys);

    echo "Language:\t\t", $fileInfo->getBasename('.php'), PHP_EOL;
    echo "Current strings:\t", count($trKeys), PHP_EOL;
    echo "New strings:\t\t", count($diff), PHP_EOL;
    echo "Backup file:\t\t", $backupFile, PHP_EOL;
    echo "Original file:\t\t", $originalFile, PHP_EOL;

    if (file_exists($backupFile)) {
        unlink($backupFile);
    }

    copy($fileInfo->getRealPath(), $backupFile);

    foreach ($diff as $index => $key) {
        $messages[$key] = $sourceMessages[$key];
    }

    echo "Total strings:\t\t", count($messages), PHP_EOL;

    ksort($messages);
    unlink($sourceDir . $fileInfo->getBasename());

    $translation = str_replace('array (', "array(\n", var_export($messages, true));
    $translation = preg_replace('#\s+\'(.+)\' => \'(.+)\',#', "\n    '$1' => '$2',", $translation);
    $needRun     = str_replace(dirname(__FILE__).DIRECTORY_SEPARATOR, '', __FILE__);

    if (DIRECTORY_SEPARATOR == '\\') {
        $needRun = "'php {$needRun}'";
    } else {
        $needRun = "'./{$needRun}'";
    }

    $content = sprintf(
        $template,
        $fileInfo->getBasename('.php'),
        date('c'),
        $projectUrl,
        str_replace(dirname(__FILE__).DIRECTORY_SEPARATOR, '', $sourceDir.'en.php'),
        $needRun . ' from project root',
        $translation
    );

    (new \SplFileObject($sourceDir . $fileInfo->getBasename(), 'w'))->fwrite($content);

    echo str_repeat('-', 120), PHP_EOL;
}
